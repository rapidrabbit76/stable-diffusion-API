name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo source code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python dependency
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-testmon flake8 black easydict
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Runs a set of commands using the runners shell
      - name: Linting [flake8]
        run: |
          flake8 . --count

      - name: Run Pytest
        run: |
          pytest ./tests

  deploy:
    if: contains(github.ref, 'main')
    needs: test
    name: Build Docker, Deploy to Heroku
    runs-on: ubuntu-20.04
    env:
      model-dir: ./app/src/

    steps:
      - name: Checkout repo source code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      - name: Download model artifacts
        run: aws s3 sync s3://rapidrabbit76-pretrained-models/Arbitrary-Style-Transfer-in-Real-Time-With-Adaptive-Instance-Normalization-pytorch-lightning/ ./app/src/

      - name: Deployment Heroku container
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_directory: "app/"
          process_type: "web"
